Copyright 2010, 2011 by LLynx, dermesser

This file is part of SVocTrainer.

SVocTrainer is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

SVocTrainer is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with SVocTrainer.  If not, see <http://www.gnu.org/licenses/>.

----------------------------------------------------------------------------

For important notices see README in this directory.
Attention: The code examples are only readable for experienced perl developers! ;-)


					DOCUMENTATION FOR "SVoctrainer"
=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=
#############################################################################################################################

This is the documentation for the perl program (yes, I find we should call it a program, it doesn't have got features that a script has got) SVocTrainer.
SVocTrainer stands for Simple Vocabulary Trainer which completely describes this program. It's a really simple vocabulary trainer, without features like
- a GUI
- big DB-Systems like MySQL
- slowness
- fussiness...

SVoctrainer uses standard text files for storing the vocabulary. You only need a normal text editor supporting UTF-8 and iso-8859-1 and UNIX line breaks. Then you write a file formatted as following:

================= <EXAMPLE> ================

# Comments are ignored
# Also empty lines are ignored

# You have to write the vocabulary as l1=l2:
l1=l2
festival=un festival
the sun=le soleil
a girl=une fille
# Well, some special characters are very difficult to write in vi ;-)
a boy=un garcon
mineral water=l'eau de minerale

================= </EXAMPLE> ===============

  				 USE THE PROGRAM
######################################################################################

To use the program, save your vocabulary in a file, e.g. 'vocs_test.txt', and type into your shell:

$ ./SVocTrainer.pl vocs_test.txt

Then the script starts and asks you which mode to use. Here you can choose:

'd' or 'dictionary' - this mode allows you to ask the vocabulary database.
't' or 'trainer'    - this mode asks you the words. 

*** USE THE TRAINING MODE ***

IF you use the training mode, you also have to give the direction to the program. That can you do as following:

't l1'  -  asks you the words of the l1 column. It shows the l2-word and you have to type the related l1-word.
't l2'  -  ---- --- --- ----- -- --- l2 ------- -- ----- --- l1----- --- --- ---- -- ---- --- ------- l2-----.

Example with chosen 't l1':
===== BEGIN SVOCTRAINER OUTPUT =====
1/9: l2? >                  ### Here you have to type 'l1' ###
2/9: un festival? >         ### and here you type 'festival'    ###
3/9: le soleil? >           ### right, here you have to type 'the sun' ###
===== END SVOCTRAINER OUTPUT =====

*** USE THE DICTIONARY MODE ***

The dictionary mode uses regular expressions to find matches. We have used a RegEx like the following one:

==== Code Example ====
$inp = readnchomp(); # reads the input of the user, e.g.: 'il'
...  ### Some lines
...  ### of code...
if ( $vocl1[$i] =~ m/.*$inp.*/ )
{...}
==== /Code Example ====

This regex finds with the input 'il' all words with an 'il' inside, and gives (probably) following output:

==== Program Output ====
le soleil = the sun
une fille = a girl

Found 2 matches
==== /Program output ====

If there was at the l1 column a word with 'il' inside, svoctrainer would find it, too.


+++++++++ ADDITIONAL NOTICES ++++++++

* Coding of the vocabulary DB: UTF-8 is recommended for standard perl and bash >=3.00
* For standard perl, the line break of all used files has to be UNIX/LINUX, not mac, not dos. If you have to modify the line break, use mac2unix, dos2unix...
* For more questions write a mail to <der.messer@web.de> (Development and documentation)
* If you find a bug or a fault in the Documentation, the program or elsewhere, send an email to <falconl@ymail.com> or, which is better, to both <falconl@ymail.com> and <der.messer@web.de>.

